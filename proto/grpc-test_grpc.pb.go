// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion7

// GrcpTestClient is the client API for GrcpTest service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GrcpTestClient interface {
	// Sends a greeting
	Msg(ctx context.Context, in *MsgRequest, opts ...grpc.CallOption) (*MsgReply, error)
}

type grcpTestClient struct {
	cc grpc.ClientConnInterface
}

func NewGrcpTestClient(cc grpc.ClientConnInterface) GrcpTestClient {
	return &grcpTestClient{cc}
}

func (c *grcpTestClient) Msg(ctx context.Context, in *MsgRequest, opts ...grpc.CallOption) (*MsgReply, error) {
	out := new(MsgReply)
	err := c.cc.Invoke(ctx, "/grpctest.GrcpTest/Msg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrcpTestServer is the server API for GrcpTest service.
// All implementations must embed UnimplementedGrcpTestServer
// for forward compatibility
type GrcpTestServer interface {
	// Sends a greeting
	Msg(context.Context, *MsgRequest) (*MsgReply, error)
	mustEmbedUnimplementedGrcpTestServer()
}

// UnimplementedGrcpTestServer must be embedded to have forward compatible implementations.
type UnimplementedGrcpTestServer struct {
}

func (UnimplementedGrcpTestServer) Msg(context.Context, *MsgRequest) (*MsgReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Msg not implemented")
}
func (UnimplementedGrcpTestServer) mustEmbedUnimplementedGrcpTestServer() {}

// UnsafeGrcpTestServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GrcpTestServer will
// result in compilation errors.
type UnsafeGrcpTestServer interface {
	mustEmbedUnimplementedGrcpTestServer()
}

func RegisterGrcpTestServer(s grpc.ServiceRegistrar, srv GrcpTestServer) {
	s.RegisterService(&_GrcpTest_serviceDesc, srv)
}

func _GrcpTest_Msg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrcpTestServer).Msg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpctest.GrcpTest/Msg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrcpTestServer).Msg(ctx, req.(*MsgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrcpTest_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpctest.GrcpTest",
	HandlerType: (*GrcpTestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Msg",
			Handler:    _GrcpTest_Msg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/grpc-test.proto",
}
